#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>

#include "WiFi_Name_And_Pass.h"

const char* ssid = STASSID;
const char* password = STAPSK;

ESP8266WebServer server(80);

const int led = 13;

void handleRoot() {
  digitalWrite(led, 1);
  server.send(200, "text/html", "<!DOCTYPE html><html><body><h2>HTML Tables</h2><p>HTML tables start with a table tag.</p><p>Table rows start with a tr tag.</p><p>Table data start with a td tag.</p><hr><h2>1 Column:</h2><table>  <tr>    <td>100</td>  </tr></table><hr><h2>1 Row and 3 Columns:</h2><table>  <tr>    <td>100</td>    <td>200</td>    <td>300</td>  </tr></table><hr><h2>3 Rows and 3 Columns:</h2><table>  <tr>    <td>100</td>    <td>200</td>    <td>300</td>  </tr>  <tr>    <td>400</td>    <td>500</td>    <td>600</td>  </tr>  <tr>    <td>700</td>    <td>800</td>    <td>900</td>  </tr></table><hr></body></html>");
  digitalWrite(led, 0);
}

void handleNotFound() {
  digitalWrite(led, 1);
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
  digitalWrite(led, 0);
}

void setup(void) {
  pinMode(led, OUTPUT);
  digitalWrite(led, 0);
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  if (MDNS.begin("esp8266")) {
    Serial.println("MDNS responder started");
  }

  server.on("/", handleRoot);


  server.on("/gif", []() {
    static const uint8_t gif[] PROGMEM = {
      0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x20, 0x00, 0x20, 0x00, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x33, 0x00, 0x00, 0x66, 0x00, 0x00, 0x99, 0x00, 0x00, 0xCC, 0x00, 0x00, 0xFF, 0x00, 
0x2B, 0x00, 0x00, 0x2B, 0x33, 0x00, 0x2B, 0x66, 0x00, 0x2B, 0x99, 0x00, 0x2B, 0xCC, 0x00, 0x2B, 
0xFF, 0x00, 0x55, 0x00, 0x00, 0x55, 0x33, 0x00, 0x55, 0x66, 0x00, 0x55, 0x99, 0x00, 0x55, 0xCC, 
0x00, 0x55, 0xFF, 0x00, 0x80, 0x00, 0x00, 0x80, 0x33, 0x00, 0x80, 0x66, 0x00, 0x80, 0x99, 0x00, 
0x80, 0xCC, 0x00, 0x80, 0xFF, 0x00, 0xAA, 0x00, 0x00, 0xAA, 0x33, 0x00, 0xAA, 0x66, 0x00, 0xAA, 
0x99, 0x00, 0xAA, 0xCC, 0x00, 0xAA, 0xFF, 0x00, 0xD5, 0x00, 0x00, 0xD5, 0x33, 0x00, 0xD5, 0x66, 
0x00, 0xD5, 0x99, 0x00, 0xD5, 0xCC, 0x00, 0xD5, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x33, 0x00, 
0xFF, 0x66, 0x00, 0xFF, 0x99, 0x00, 0xFF, 0xCC, 0x00, 0xFF, 0xFF, 0x33, 0x00, 0x00, 0x33, 0x00, 
0x33, 0x33, 0x00, 0x66, 0x33, 0x00, 0x99, 0x33, 0x00, 0xCC, 0x33, 0x00, 0xFF, 0x33, 0x2B, 0x00, 
0x33, 0x2B, 0x33, 0x33, 0x2B, 0x66, 0x33, 0x2B, 0x99, 0x33, 0x2B, 0xCC, 0x33, 0x2B, 0xFF, 0x33, 
0x55, 0x00, 0x33, 0x55, 0x33, 0x33, 0x55, 0x66, 0x33, 0x55, 0x99, 0x33, 0x55, 0xCC, 0x33, 0x55, 
0xFF, 0x33, 0x80, 0x00, 0x33, 0x80, 0x33, 0x33, 0x80, 0x66, 0x33, 0x80, 0x99, 0x33, 0x80, 0xCC, 
0x33, 0x80, 0xFF, 0x33, 0xAA, 0x00, 0x33, 0xAA, 0x33, 0x33, 0xAA, 0x66, 0x33, 0xAA, 0x99, 0x33, 
0xAA, 0xCC, 0x33, 0xAA, 0xFF, 0x33, 0xD5, 0x00, 0x33, 0xD5, 0x33, 0x33, 0xD5, 0x66, 0x33, 0xD5, 
0x99, 0x33, 0xD5, 0xCC, 0x33, 0xD5, 0xFF, 0x33, 0xFF, 0x00, 0x33, 0xFF, 0x33, 0x33, 0xFF, 0x66, 
0x33, 0xFF, 0x99, 0x33, 0xFF, 0xCC, 0x33, 0xFF, 0xFF, 0x66, 0x00, 0x00, 0x66, 0x00, 0x33, 0x66, 
0x00, 0x66, 0x66, 0x00, 0x99, 0x66, 0x00, 0xCC, 0x66, 0x00, 0xFF, 0x66, 0x2B, 0x00, 0x66, 0x2B, 
0x33, 0x66, 0x2B, 0x66, 0x66, 0x2B, 0x99, 0x66, 0x2B, 0xCC, 0x66, 0x2B, 0xFF, 0x66, 0x55, 0x00, 
0x66, 0x55, 0x33, 0x66, 0x55, 0x66, 0x66, 0x55, 0x99, 0x66, 0x55, 0xCC, 0x66, 0x55, 0xFF, 0x66, 
0x80, 0x00, 0x66, 0x80, 0x33, 0x66, 0x80, 0x66, 0x66, 0x80, 0x99, 0x66, 0x80, 0xCC, 0x66, 0x80, 
0xFF, 0x66, 0xAA, 0x00, 0x66, 0xAA, 0x33, 0x66, 0xAA, 0x66, 0x66, 0xAA, 0x99, 0x66, 0xAA, 0xCC, 
0x66, 0xAA, 0xFF, 0x66, 0xD5, 0x00, 0x66, 0xD5, 0x33, 0x66, 0xD5, 0x66, 0x66, 0xD5, 0x99, 0x66, 
0xD5, 0xCC, 0x66, 0xD5, 0xFF, 0x66, 0xFF, 0x00, 0x66, 0xFF, 0x33, 0x66, 0xFF, 0x66, 0x66, 0xFF, 
0x99, 0x66, 0xFF, 0xCC, 0x66, 0xFF, 0xFF, 0x99, 0x00, 0x00, 0x99, 0x00, 0x33, 0x99, 0x00, 0x66, 
0x99, 0x00, 0x99, 0x99, 0x00, 0xCC, 0x99, 0x00, 0xFF, 0x99, 0x2B, 0x00, 0x99, 0x2B, 0x33, 0x99, 
0x2B, 0x66, 0x99, 0x2B, 0x99, 0x99, 0x2B, 0xCC, 0x99, 0x2B, 0xFF, 0x99, 0x55, 0x00, 0x99, 0x55, 
0x33, 0x99, 0x55, 0x66, 0x99, 0x55, 0x99, 0x99, 0x55, 0xCC, 0x99, 0x55, 0xFF, 0x99, 0x80, 0x00, 
0x99, 0x80, 0x33, 0x99, 0x80, 0x66, 0x99, 0x80, 0x99, 0x99, 0x80, 0xCC, 0x99, 0x80, 0xFF, 0x99, 
0xAA, 0x00, 0x99, 0xAA, 0x33, 0x99, 0xAA, 0x66, 0x99, 0xAA, 0x99, 0x99, 0xAA, 0xCC, 0x99, 0xAA, 
0xFF, 0x99, 0xD5, 0x00, 0x99, 0xD5, 0x33, 0x99, 0xD5, 0x66, 0x99, 0xD5, 0x99, 0x99, 0xD5, 0xCC, 
0x99, 0xD5, 0xFF, 0x99, 0xFF, 0x00, 0x99, 0xFF, 0x33, 0x99, 0xFF, 0x66, 0x99, 0xFF, 0x99, 0x99, 
0xFF, 0xCC, 0x99, 0xFF, 0xFF, 0xCC, 0x00, 0x00, 0xCC, 0x00, 0x33, 0xCC, 0x00, 0x66, 0xCC, 0x00, 
0x99, 0xCC, 0x00, 0xCC, 0xCC, 0x00, 0xFF, 0xCC, 0x2B, 0x00, 0xCC, 0x2B, 0x33, 0xCC, 0x2B, 0x66, 
0xCC, 0x2B, 0x99, 0xCC, 0x2B, 0xCC, 0xCC, 0x2B, 0xFF, 0xCC, 0x55, 0x00, 0xCC, 0x55, 0x33, 0xCC, 
0x55, 0x66, 0xCC, 0x55, 0x99, 0xCC, 0x55, 0xCC, 0xCC, 0x55, 0xFF, 0xCC, 0x80, 0x00, 0xCC, 0x80, 
0x33, 0xCC, 0x80, 0x66, 0xCC, 0x80, 0x99, 0xCC, 0x80, 0xCC, 0xCC, 0x80, 0xFF, 0xCC, 0xAA, 0x00, 
0xCC, 0xAA, 0x33, 0xCC, 0xAA, 0x66, 0xCC, 0xAA, 0x99, 0xCC, 0xAA, 0xCC, 0xCC, 0xAA, 0xFF, 0xCC, 
0xD5, 0x00, 0xCC, 0xD5, 0x33, 0xCC, 0xD5, 0x66, 0xCC, 0xD5, 0x99, 0xCC, 0xD5, 0xCC, 0xCC, 0xD5, 
0xFF, 0xCC, 0xFF, 0x00, 0xCC, 0xFF, 0x33, 0xCC, 0xFF, 0x66, 0xCC, 0xFF, 0x99, 0xCC, 0xFF, 0xCC, 
0xCC, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x33, 0xFF, 0x00, 0x66, 0xFF, 0x00, 0x99, 0xFF, 
0x00, 0xCC, 0xFF, 0x00, 0xFF, 0xFF, 0x2B, 0x00, 0xFF, 0x2B, 0x33, 0xFF, 0x2B, 0x66, 0xFF, 0x2B, 
0x99, 0xFF, 0x2B, 0xCC, 0xFF, 0x2B, 0xFF, 0xFF, 0x55, 0x00, 0xFF, 0x55, 0x33, 0xFF, 0x55, 0x66, 
0xFF, 0x55, 0x99, 0xFF, 0x55, 0xCC, 0xFF, 0x55, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x33, 0xFF, 
0x80, 0x66, 0xFF, 0x80, 0x99, 0xFF, 0x80, 0xCC, 0xFF, 0x80, 0xFF, 0xFF, 0xAA, 0x00, 0xFF, 0xAA, 
0x33, 0xFF, 0xAA, 0x66, 0xFF, 0xAA, 0x99, 0xFF, 0xAA, 0xCC, 0xFF, 0xAA, 0xFF, 0xFF, 0xD5, 0x00, 
0xFF, 0xD5, 0x33, 0xFF, 0xD5, 0x66, 0xFF, 0xD5, 0x99, 0xFF, 0xD5, 0xCC, 0xFF, 0xD5, 0xFF, 0xFF, 
0xFF, 0x00, 0xFF, 0xFF, 0x33, 0xFF, 0xFF, 0x66, 0xFF, 0xFF, 0x99, 0xFF, 0xFF, 0xCC, 0xFF, 0xFF, 
0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0xF9, 0x04, 
0x01, 0x00, 0x00, 0xFC, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x08, 
0xFF, 0x00, 0x01, 0x08, 0x1C, 0x38, 0xD0, 0x92, 0x3D, 0x63, 0x07, 0xED, 0x25, 0x4C, 0x68, 0xCC, 
0x06, 0xC1, 0x87, 0x10, 0x01, 0xC0, 0x50, 0x48, 0xB1, 0xA2, 0x45, 0x7B, 0x90, 0x22, 0x6A, 0xA4, 
0x68, 0xC9, 0x0C, 0x24, 0x8F, 0x20, 0x3F, 0x22, 0x54, 0x68, 0x49, 0xE3, 0x43, 0x83, 0xF6, 0x4C, 
0x0E, 0xAC, 0x58, 0x52, 0x25, 0x00, 0x84, 0xC0, 0x5C, 0x02, 0xB0, 0xD8, 0xD2, 0x24, 0xC2, 0x9A, 
0x26, 0x2F, 0xE2, 0x84, 0x08, 0xCC, 0xDE, 0xCE, 0x88, 0x17, 0x7D, 0xDA, 0xB4, 0x17, 0xD3, 0x65, 
0x50, 0x8C, 0x1A, 0x6F, 0xCA, 0x3C, 0x6A, 0x0F, 0x46, 0x44, 0x98, 0x32, 0x51, 0x5E, 0x34, 0xF6, 
0x54, 0xA8, 0x4C, 0x88, 0x0A, 0xA9, 0x42, 0x54, 0x7A, 0xF5, 0x21, 0x42, 0xAD, 0x5E, 0x89, 0x76, 
0x0D, 0x0B, 0x16, 0x8C, 0x59, 0x30, 0x59, 0x6D, 0x9C, 0x3D, 0x6B, 0x66, 0xAD, 0x53, 0xB2, 0x02, 
0x47, 0x52, 0x34, 0x06, 0xEF, 0x22, 0xB3, 0x8B, 0x5B, 0x0F, 0xC6, 0xA5, 0xE8, 0x50, 0xA0, 0x8D, 
0x94, 0x33, 0xC1, 0xCE, 0x54, 0x98, 0x57, 0xEB, 0xC8, 0x8C, 0x00, 0x3A, 0xF6, 0x14, 0xA8, 0xD7, 
0x06, 0x24, 0xA9, 0x85, 0xF7, 0x02, 0x56, 0x58, 0x77, 0x32, 0x55, 0x30, 0x72, 0x01, 0x13, 0xFC, 
0x2A, 0x99, 0xF1, 0x4A, 0xC6, 0x82, 0x29, 0x46, 0x7E, 0x49, 0x38, 0xB0, 0x67, 0xD3, 0x36, 0x80, 
0x41, 0x86, 0x4B, 0xDA, 0x1E, 0x18, 0x00, 0x06, 0x8A, 0x5A, 0x06, 0x60, 0xC6, 0xE2, 0x68, 0xB9, 
0x6F, 0x4F, 0xEB, 0x45, 0x5B, 0x71, 0x74, 0xCF, 0x8A, 0x99, 0x99, 0x6A, 0x1E, 0xC8, 0x59, 0xE0, 
0xD9, 0xBF, 0x07, 0xD5, 0xAE, 0x5D, 0x0E, 0x26, 0x37, 0x71, 0xBD, 0x10, 0xEB, 0xFE, 0xBC, 0x5A, 
0x3C, 0x6C, 0xD1, 0xB1, 0x7B, 0x05, 0x3F, 0x9F, 0x2E, 0xB3, 0xFA, 0x66, 0xAB, 0xD8, 0x49, 0x6B, 
0x21, 0x17, 0x88, 0x32, 0x3C, 0x00, 0x15, 0x0A, 0x11, 0x63, 0x4D, 0xDF, 0xB6, 0x3D, 0x18, 0xF7, 
0xF0, 0x57, 0x47, 0xE4, 0x2D, 0x9C, 0x69, 0x5F, 0x8D, 0xB1, 0xB3, 0xEA, 0x5F, 0x38, 0x72, 0x24, 
0xCE, 0x80, 0x00, 0x3B
      };
    char gif_colored[sizeof(gif)];
    memcpy_P(gif_colored, gif, sizeof(gif));
    server.send(200, "image/gif", gif_colored, sizeof(gif_colored));
  });

  server.onNotFound(handleNotFound);

  server.begin();
  Serial.println("HTTP server started");
}

void loop(void) {
  server.handleClient();
  MDNS.update();
}
